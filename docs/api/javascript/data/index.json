[null,null,["Index",[[[null,"<h1>selenium-webdriver</h1>\n<p>Selenium is a browser automation library. Most often used for testing\nweb-applications, Selenium may be used for any task that requires automating\ninteraction with the browser.</p>\n<h2>Installation</h2>\n<p>Selenium may be installed via npm with</p>\n<pre><code>npm install selenium-webdriver\n</code></pre>\n<p>You will need to download additional components to work with each of the major\nbrowsers. The drivers for Chrome, Firefox, and Microsoft&#39;s IE and Edge web\nbrowsers are all standalone executables that should be placed on your system\n<a href=\"http://en.wikipedia.org/wiki/PATH_%28variable%29\">PATH</a>. Apple&#39;s safaridriver is shipped with Safari 10 for OS X El Capitan and\nmacOS Sierra. You will need to enable Remote Automation in the Develop menu of\nSafari 10 before testing.</p>\n<table><thead><tr><th>Browser</th><th>Component</th></tr></thead><tbody><tr><td>Chrome</td><td><a href=\"http://chromedriver.storage.googleapis.com/index.html\">chromedriver(.exe)</a></td></tr><tr><td>Internet Explorer</td><td><a href=\"http://selenium-release.storage.googleapis.com/index.html\">IEDriverServer.exe</a></td></tr><tr><td>Edge</td><td><a href=\"http://go.microsoft.com/fwlink/?LinkId&#61;619687\">MicrosoftWebDriver.msi</a></td></tr><tr><td>Firefox</td><td><a href=\"https://github.com/mozilla/geckodriver/releases/\">geckodriver(.exe)</a></td></tr><tr><td>Safari</td><td><a href=\"https://developer.apple.com/library/prerelease/content/releasenotes/General/WhatsNewInSafari/Articles/Safari_10_0.html#//apple_ref/doc/uid/TP40014305-CH11-DontLinkElementID_28\">safaridriver</a></td></tr></tbody></table>\n<h2>Usage</h2>\n<p>The sample below and others are included in the <code>example</code> directory. You may\nalso find the tests for selenium-webdriver informative.</p>\n<pre><code>const {Builder, By, Key, until} &#61; require(&#39;selenium-webdriver&#39;);\n\n(async function example() {\n  let driver &#61; await new Builder().forBrowser(&#39;firefox&#39;).build();\n  try {\n    await driver.get(&#39;http://www.google.com/ncr&#39;);\n    await driver.findElement(By.name(&#39;q&#39;));.sendKeys(&#39;webdriver&#39;, Key.RETURN);\n    await driver.wait(until.titleIs(&#39;webdriver - Google Search&#39;), 1000);\n  } finally {\n    await driver.quit();\n  }\n})();\n</code></pre>\n<h3>Using the Builder API</h3>\n<p>The <code>Builder</code> class is your one-stop shop for configuring new WebDriver\ninstances. Rather than clutter your code with branches for the various browsers,\nthe builder lets you set all options in one flow. When you call\n<code>Builder#build()</code>, all options irrelevant to the selected browser are dropped:</p>\n<pre><code>const webdriver &#61; require(&#39;selenium-webdriver&#39;);\nconst chrome &#61; require(&#39;selenium-webdriver/chrome&#39;);\nconst firefox &#61; require(&#39;selenium-webdriver/firefox&#39;);\n\nlet driver &#61; new webdriver.Builder()\n    .forBrowser(&#39;firefox&#39;)\n    .setChromeOptions(/* ... */)\n    .setFirefoxOptions(/* ... */)\n    .build();\n</code></pre>\n<p>Why would you want to configure options irrelevant to the target browser? The\n<code>Builder</code>&#39;s API defines your <em>default</em> configuration. You can change the target\nbrowser at runtime through the <code>SELENIUM_BROWSER</code> environment variable. For\nexample, the <code>example/google_search.js</code> script is configured to run against\nFirefox. You can run the example against other browsers just by changing the\nruntime environment</p>\n<pre><code># cd node_modules/selenium-webdriver\nnode example/google_search\nSELENIUM_BROWSER&#61;chrome node example/google_search\nSELENIUM_BROWSER&#61;safari node example/google_search\n</code></pre>\n<h3>The Standalone Selenium Server</h3>\n<p>The standalone Selenium Server acts as a proxy between your script and the\nbrowser-specific drivers. The server may be used when running locally, but it&#39;s\nnot recommend as it introduces an extra hop for each request and will slow\nthings down. The server is required, however, to use a browser on a remote host\n(most browser drivers, like the IEDriverServer, do not accept remote\nconnections).</p>\n<p>To use the Selenium Server, you will need to install the\n<a href=\"http://www.oracle.com/technetwork/java/javase/downloads/index.html\">JDK</a> and\ndownload the latest server from <a href=\"http://selenium-release.storage.googleapis.com/index.html\">Selenium</a>. Once downloaded, run the\nserver with</p>\n<pre><code>java -jar selenium-server-standalone-2.45.0.jar\n</code></pre>\n<p>You may configure your tests to run against a remote server through the Builder\nAPI:</p>\n<pre><code>let driver &#61; new webdriver.Builder()\n    .forBrowser(&#39;firefox&#39;)\n    .usingServer(&#39;http://localhost:4444/wd/hub&#39;)\n    .build();\n</code></pre>\n<p>Or change the Builder&#39;s configuration at runtime with the <code>SELENIUM_REMOTE_URL</code>\nenvironment variable:</p>\n<pre><code>SELENIUM_REMOTE_URL&#61;&#34;http://localhost:4444/wd/hub&#34; node script.js\n</code></pre>\n<p>You can experiment with these options using the <code>example/google_search.js</code>\nscript provided with <code>selenium-webdriver</code>.</p>\n<h2>Documentation</h2>\n<p>API documentation is available online from the <a href=\"http://seleniumhq.github.io/selenium/docs/api/javascript/module/selenium-webdriver/\">Selenium project</a>.\nAdditional resources include</p>\n<ul><li>the #selenium channel on freenode IRC</li><li>the <a href=\"https://groups.google.com/forum/#!forum/selenium-users\">selenium-users&#64;googlegroups.com</a> list</li><li><a href=\"http://www.seleniumhq.org/docs/\">SeleniumHQ</a> documentation</li></ul>\n<h2>Contributing</h2>\n<p>Contributions are accepted either through <a href=\"https://github.com/SeleniumHQ/selenium/\">GitHub</a> pull requests or patches\nvia the <a href=\"https://github.com/SeleniumHQ/selenium/issues\">Selenium issue tracker</a>. You must sign our\n<a href=\"http://goo.gl/qC50R\">Contributor License Agreement</a> before your changes will be accepted.</p>\n<h2>Node Support Policy</h2>\n<p>Each version of selenium-webdriver will support the latest <em>semver-minor</em>\nversion of the <a href=\"https://github.com/nodejs/LTS\">LTS</a> and stable Node releases. All <em>semver-major</em> &amp;\n<em>semver-minor</em> versions between the LTS and stable release will have &#34;best\neffort&#34; support. Following a Selenium release, any <em>semver-minor</em> Node releases\nwill also have &#34;best effort&#34; support. Releases older than the latest LTS,\n<em>semver-major</em> releases, and all unstable release branches (e.g. &#34;v.Next&#34;)\nare considered strictly unsupported.</p>\n<p>For example, suppose the current LTS and stable releases are v6.9.5 and v7.5.0,\nrespectively. Then a Selenium release would have the following support levels:</p>\n<table><thead><tr><th>Version</th><th>Support</th></tr></thead><tbody><tr><td>&lt;&#61; 6.8</td><td><em>unsupported</em></td></tr><tr><td>6.9</td><td>supported</td></tr><tr><td>7.0-4</td><td>best effort</td></tr><tr><td>7.5</td><td>supported</td></tr><tr><td>&gt;&#61; 7.5</td><td>best effort</td></tr><tr><td>v.Next</td><td><em>unsupported</em></td></tr></tbody></table>\n<h3>Support Level Definitions</h3>\n<ul><li>\n<p><em>supported:</em> A selenium-webdriver release will be API compatible with the\nplatform API, without the use of runtime flags.</p>\n</li><li>\n<p><em>best effort:</em> Bugs will be investigated as time permits. API compatibility is\nonly guaranteed where required by a <em>supported</em> release. This effectively\nmeans the adoption of new JS features, such as ES2015 modules, will depend\non what is supported in Node&#39;s LTS.</p>\n</li><li>\n<p><em>unsupported:</em> Bug submissions will be closed as will-not-fix and API\ncompatibility is not guaranteed.</p>\n</li></ul>\n<h3>Projected Support Schedule</h3>\n<p>If Node releases a new <a href=\"https://github.com/nodejs/LTS\">LTS</a> each October and a new major version every 6\nmonths, the support window for selenium-webdriver will be roughly:</p>\n<table><thead><tr><th>Date</th><th align=\"right\">LTS</th><th align=\"right\">Stable</th></tr></thead><tbody><tr><td>(current)</td><td align=\"right\">8.9</td><td align=\"right\">9.0</td></tr><tr><td>2018-04</td><td align=\"right\">8.x</td><td align=\"right\">10.0</td></tr><tr><td>2018-10</td><td align=\"right\">10.x</td><td align=\"right\">11.0</td></tr><tr><td>2019-04</td><td align=\"right\">10.x</td><td align=\"right\">12.0</td></tr><tr><td>2019-10</td><td align=\"right\">12.x</td><td align=\"right\">13.0</td></tr></tbody></table>\n<h2>Issues</h2>\n<p>Please report any issues using the <a href=\"https://github.com/SeleniumHQ/selenium/issues\">Selenium issue tracker</a>. When using\nthe issue tracker</p>\n<ul><li><strong>Do</strong> include a detailed description of the problem.</li><li><strong>Do</strong> include a link to a <a href=\"http://gist.github.com/\">gist</a> with any\ninteresting stack traces/logs (you may also attach these directly to the bug\nreport).</li><li><strong>Do</strong> include a <a href=\"http://www.webkit.org/quality/reduction.html\">reduced test case</a>. Reporting &#34;unable to find\nelement on the page&#34; is <em>not</em> a valid report - there&#39;s nothing for us to\nlook into. Expect your bug report to be closed if you do not provide enough\ninformation for us to investigate.</li><li><strong>Do not</strong> use the issue tracker to submit basic help requests. All help\ninquiries should be directed to the <a href=\"https://groups.google.com/forum/#!forum/selenium-users\">user forum</a> or #selenium IRC\nchannel.</li><li><strong>Do not</strong> post empty &#34;I see this too&#34; or &#34;Any updates?&#34; comments. These\nprovide no additional information and clutter the log.</li><li><strong>Do not</strong> report regressions on closed bugs as they are not actively\nmonitored for updates (especially bugs that are &gt;6 months old). Please open a\nnew issue and reference the original bug in your report.</li></ul>\n<h2>License</h2>\n<p>Licensed to the Software Freedom Conservancy (SFC) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The SFC licenses this file\nto you under the Apache License, Version 2.0 (the\n&#34;License&#34;); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at</p>\n<p>http://www.apache.org/licenses/LICENSE-2.0</p>\n<p>Unless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\n&#34;AS IS&#34; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, either express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.</p>\n"]]]]]