{"2":{"1":[{"1":"selenium-webdriver/firefox","5":{"1":"firefox/index.js","2":112,"3":"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/firefox/index.js#L112"},"6":{"1":[{"1":"Binary","2":"index_exports_Binary.html","3":{"1":[{"2":"<p>Provides a mechanism to configure and launch Firefox in a subprocess for\nuse with WebDriver.</p>\n"}]}},{"1":"Driver","2":"index_exports_Driver.html","3":{"1":[{"2":"<p>A WebDriver client for Firefox.</p>\n"}]}},{"1":"Options","2":"index_exports_Options.html","3":{"1":[{"2":"<p>Configuration options for the FirefoxDriver.</p>\n"}]}},{"1":"Profile","2":"index_exports_Profile.html","3":{"1":[{"2":"<p>Models a Firefox profile directory for use with the FirefoxDriver.</p>\n"}]}},{"1":"ServiceBuilder","2":"index_exports_ServiceBuilder.html","3":{"1":[{"2":"<p>Creates <a href=\"../remote/index_exports_DriverService.html\"><code>selenium-webdriver/remote.DriverService</code></a> instances that manage\na <a href=\"https://github.com/mozilla/geckodriver\">geckodriver</a> server in a child\nprocess.</p>\n"}]}}],"2":[{"1":"Context","2":"index_exports_Context.html","3":{"1":[{"2":"<p>Enum of available command contexts.</p>\n"}]}}]},"7":{"1":[{"2":"<p>Defines the <a href=\"index_exports_Driver.html\">WebDriver</a> client for Firefox.\nBefore using this module, you must download the latest\n<a href=\"https://github.com/mozilla/geckodriver/releases/\">geckodriver release</a> and ensure it can be found on your system <a href=\"http://en.wikipedia.org/wiki/PATH_%28variable%29\">PATH</a>.</p>\n<p>Each FirefoxDriver instance will be created with an anonymous profile,\nensuring browser historys do not share session data (cookies, history, cache,\noffline storage, etc.)</p>\n<p><strong>Customizing the Firefox Profile</strong></p>\n<p>The <a href=\"profile_exports_Profile.html\"><code>Profile</code></a> class may be used to configure the browser profile used\nwith WebDriver, with functions to install additional\n<a href=\"profile_exports_Profile.html#addExtension\">extensions</a>, configure browser\n<a href=\"profile_exports_Profile.html#setPreference\">preferences</a>, and more. For example, you\nmay wish to include Firebug:</p>\n<pre><code> var firefox &#61; require(&#39;selenium-webdriver/firefox&#39;);\n\n var profile &#61; new firefox.Profile();\n profile.addExtension(&#39;/path/to/firebug.xpi&#39;);\n profile.setPreference(&#39;extensions.firebug.showChromeErrors&#39;, true);\n\n var options &#61; new firefox.Options().setProfile(profile);\n var driver &#61; new firefox.Driver(options);\n</code></pre>\n<p>The <a href=\"profile_exports_Profile.html\"><code>Profile</code></a> class may also be used to configure WebDriver based on a\npre-existing browser profile:</p>\n<pre><code> var profile &#61; new firefox.Profile(\n     &#39;/usr/local/home/bob/.mozilla/firefox/3fgog75h.testing&#39;);\n var options &#61; new firefox.Options().setProfile(profile);\n var driver &#61; new firefox.Driver(options);\n</code></pre>\n<p>The FirefoxDriver will <em>never</em> modify a pre-existing profile; instead it will\ncreate a copy for it to modify. By extension, there are certain browser\npreferences that are required for WebDriver to function properly and they\nwill always be overwritten.</p>\n<p><strong>Using a Custom Firefox Binary</strong></p>\n<p>On Windows and OSX, the FirefoxDriver will search for Firefox in its\ndefault installation location:</p>\n<ul><li>Windows: C:\\Program Files and C:\\Program Files (x86).</li><li>Mac OS X: /Applications/Firefox.app</li></ul>\n<p>For Linux, Firefox will be located on the PATH: <code>$(where firefox)</code>.</p>\n<p>You can configure WebDriver to start use a custom Firefox installation with\nthe <a href=\"binary_exports_Binary.html\"><code>Binary</code></a> class:</p>\n<pre><code> var firefox &#61; require(&#39;selenium-webdriver/firefox&#39;);\n var binary &#61; new firefox.Binary(&#39;/my/firefox/install/dir/firefox-bin&#39;);\n var options &#61; new firefox.Options().setBinary(binary);\n var driver &#61; new firefox.Driver(options);\n</code></pre>\n<p><strong>Remote Testing</strong></p>\n<p>You may customize the Firefox binary and profile when running against a\nremote Selenium server. Your custom profile will be packaged as a zip and\ntransfered to the remote host for use. The profile will be transferred\n<em>once for each new session</em>. The performance impact should be minimal if\nyou&#39;ve only configured a few extra browser preferences. If you have a large\nprofile with several extensions, you should consider installing it on the\nremote host and defining its path via the <a href=\"index_exports_Options.html\"><code>Options</code></a> class. Custom\nbinaries are never copied to remote machines and must be referenced by\ninstallation path.</p>\n<pre><code> var options &#61; new firefox.Options()\n     .setProfile(&#39;/profile/path/on/remote/host&#39;)\n     .setBinary(&#39;/install/dir/on/remote/host/firefox-bin&#39;);\n\n var driver &#61; new (require(&#39;selenium-webdriver&#39;)).Builder()\n     .forBrowser(&#39;firefox&#39;)\n     .usingServer(&#39;http://127.0.0.1:4444/wd/hub&#39;)\n     .setFirefoxOptions(options)\n     .build();\n</code></pre>\n<p><strong>Testing Older Versions of Firefox</strong></p>\n<p>To test versions of Firefox prior to Firefox 47, you must disable the use of\nthe geckodriver using the <a href=\"index_exports_Options.html\"><code>Options</code></a> class.</p>\n<pre><code> var options &#61; new firefox.Options().useGeckoDriver(false);\n var driver &#61; new firefox.Driver(options);\n</code></pre>\n<p>Alternatively, you may disable the geckodriver at runtime by setting the\nenvironment variable <code>SELENIUM_MARIONETTE&#61;false</code>.</p>\n"}]},"8":{"6":true},"23":"index.html","24":"selenium-webdriver/firefox"}]}}