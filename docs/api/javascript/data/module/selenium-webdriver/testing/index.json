[null,[[["selenium-webdriver/testing",null,null,null,[null,33,null,[null,null,"testing/index.js"],[null,null,"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/testing/index.js#L33"]],[[["Environment",null,[[[null,"<p>Defines the environment a test suite is running against.</p>\n"]]],null,[null,null,"index_exports_Environment.html"]]],[],[["SuiteOptions",null,[[[null,"<p>Configuration options for a <a href=\"index.html#suite\">test suite</a>.</p>\n"]]],[null,null,null,null,1],[null,null,"index_exports_SuiteOptions.html"]],["TargetBrowser",null,[[[null,"<p>Describes a browser targetted by a test suite.</p>\n"]]],[null,null,null,null,1],[null,null,"index_exports_TargetBrowser.html"]]]],[[[null,"<p>Provides extensions for\n<a href=\"https://jasmine.github.io\">Jasmine</a> and <a href=\"https://mochajs.org\">Mocha</a>.</p>\n<p>You may conditionally suppress a test function using the exported\n&#34;ignore&#34; function. If the provided predicate returns true, the attached\ntest case will be skipped:</p>\n<pre><code> test.ignore(maybe()).it(&#39;is flaky&#39;, function() {\n   if (Math.random() &lt; 0.5) throw Error();\n });\n\n function maybe() { return Math.random() &lt; 0.5; }\n</code></pre>\n"]]],[null,null,null,null,null,1],null,[],null,[[["ignore",[null,436,null,[null,null,"testing/index.js"],[null,null,"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/testing/index.js#L436"]],[[[null,"<p>Returns an object with wrappers for the standard mocha/jasmine test\nfunctions: <code>describe</code> and <code>it</code>, which will redirect to <code>xdescribe</code> and <code>xit</code>,\nrespectively, if provided predicate function returns false.</p>\n<p>Sample usage:</p>\n<pre><code> const {Browser} &#61; require(&#39;selenium-webdriver&#39;);\n const {suite, ignore} &#61; require(&#39;selenium-webdriver/testing&#39;);\n\n suite(function(env) {\n\n     // Skip tests the current environment targets Chrome.\n     ignore(env.browsers(Browser.CHROME)).\n     describe(&#39;something&#39;, async function() {\n       let driver &#61; await env.builder().build();\n       // etc.\n     });\n });\n</code></pre>\n"]]],null,null,null,null,null,[],[]],[],null,[["predicateFn",[null,null,[null,null,[],[null,null,null,["boolean",null,null,1,[]]]]],[[[null,"<p>A predicate to call to determine\nif the test should be suppressed. This function MUST be synchronous.</p>\n"]]]]],[null,[null,null,null,null,[[["describe",[null,null,null,["Function",null,null,null,[]]]],["it",[null,null,null,["Function",null,null,null,[]]]]]]],[[[null,"<p>an object with wrapped\nversions of the <code>describe</code> and <code>it</code> wtest functions.</p>\n"]]]],[]],[["init",[null,182,null,[null,null,"testing/index.js"],[null,null,"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/testing/index.js#L182"]],[[[null,"<p>Initializes this module by determining which browsers a\n<a href=\"index.html#suite\">test suite</a> should run against. The default\nbehavior is to run tests against every browser with a WebDriver executables\n(chromedriver, firefoxdriver, etc.) are installed on the system by <code>PATH</code>.</p>\n<p>Specific browsers can be selected at runtime by setting the\n<code>SELENIUM_BROWSER</code> environment variable. This environment variable has the\nsame semantics as  with the WebDriver <a href=\"../index_exports_Builder.html\"><code>Builder</code></a>,\nexcept you may use a comma-delimited list to run against multiple browsers:</p>\n<pre><code> SELENIUM_BROWSER&#61;chrome,firefox mocha --recursive tests/\n</code></pre>\n<p>The <code>SELENIUM_REMOTE_URL</code> environment variable may be set to configure tests\nto run againt an externally managed (usually remote) Selenium server. When\nset, the WebDriver builder provided by each\nTestEnvironment will automatically be\nconfigured to use this server instead of starting a browser drively locally.</p>\n<p>The <code>SELENIUM_SERVER_JAR</code> environment variable may be set to the path of a\nstandalone Selenium server on the local machine that should be used for\nWebDriver sessions. When set, the WebDriver builder provided by each\nTestEnvironment will automatically be configured to use the\nstarted server instead of using a browser driver directly. It should only be\nnecessary to set the <code>SELENIUM_SERVER_JAR</code> when testing locally against\nbrowsers not natively supported by the WebDriver\n<a href=\"../index_exports_Builder.html\"><code>Builder</code></a>.</p>\n<p>When either of the <code>SELENIUM_REMOTE_URL</code> or <code>SELENIUM_SERVER_JAR</code> environment\nvariables are set, the <code>SELENIUM_BROWSER</code> variable must also be set.</p>\n"]]],null,null,null,null,null,[],[]],[],null,[["force",[1,null,null,null,null,[[[null,null,null,["boolean",null,null,1,[]]],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>whether to force this module to re-initialize and\nscan <code>process.env</code> again to determine which browsers to run tests\nagainst.</p>\n"]]]]],null,[]],[["suite",[null,359,null,[null,null,"testing/index.js"],[null,null,"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/testing/index.js#L359"]],[[[null,"<p>Defines a test suite by calling the provided function once for each of the\ntarget browsers. If a suite is not limited to a specific set of browsers in\nthe provided <a href=\"index_exports_SuiteOptions.html\">suite options</a>, the suite will\nbe configured to run against each of the <a href=\"index.html#init\">runtime\ntarget browsers</a>.</p>\n<p>Sample usage:</p>\n<pre><code> const {By, Key, until} &#61; require(&#39;selenium-webdriver&#39;);\n const {suite} &#61; require(&#39;selenium-webdriver/testing&#39;);\n\n suite(function(env) {\n   describe(&#39;Google Search&#39;, function() {\n     let driver;\n\n     before(async function() {\n       driver &#61; await env.builder().build();\n     });\n\n     after(() &#61;&gt; driver.quit());\n\n     it(&#39;demo&#39;, async function() {\n       await driver.get(&#39;http://www.google.com/ncr&#39;);\n\n       let q &#61; await driver.findElement(By.name(&#39;q&#39;));\n       await q.sendKeys(&#39;webdriver&#39;, Key.RETURN);\n       await driver.wait(\n           until.titleIs(&#39;webdriver - Google Search&#39;), 1000);\n     });\n   });\n });\n</code></pre>\n<p>By default, this example suite will run against every WebDriver-enabled\nbrowser on the current system. Alternatively, the <code>SELENIUM_BROWSER</code>\nenvironment variable may be used to run against a specific browser:</p>\n<pre><code> SELENIUM_BROWSER&#61;firefox mocha -t 120000 example_test.js\n</code></pre>\n"]]],null,null,null,null,null,[],[]],[],null,[["fn",[null,null,[null,null,[[null,null,null,["Environment","selenium-webdriver/testing.Environment",[null,null,[null,null,"index_exports_Environment.html"]],null,[]]]],[null,null,null,null,null,null,null,1]]],[[[null,"<p>the function to call to build the test\nsuite.</p>\n"]]]],["options",[1,null,null,null,null,[[[null,null,null,["SuiteOptions","selenium-webdriver/testing.SuiteOptions",[null,null,[null,null,"index_exports_SuiteOptions.html"]],null,[]]],[null,null,null,null,null,null,null,null,null,1],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>configuration options.</p>\n"]]]]],null,[]]],[],null,[],[],null,[],[],[],null,null,"index.html","selenium-webdriver/testing",[],[],[],[]]]]]