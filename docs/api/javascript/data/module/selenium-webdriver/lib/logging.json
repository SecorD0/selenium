{"2":{"1":[{"1":"selenium-webdriver/lib/logging","5":{"1":"lib/logging.js","2":664,"3":"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/logging.js#L664"},"6":{"1":[{"1":"Entry","2":"logging_exports_Entry.html","3":{"1":[{"2":"<p>Describes a single log entry.</p>\n"}]}},{"1":"Level","2":"logging_exports_Level.html","3":{"1":[{"2":"<p>Defines a message level that may be used to control logging output.</p>\n"}]}},{"1":"LogManager","2":"logging_exports_LogManager.html","3":{"1":[{"2":"<p>Maintains a collection of loggers.</p>\n"}]}},{"1":"Logger","2":"logging_exports_Logger.html","3":{"1":[{"2":"<p>An object used to log debugging messages.</p>\n"}]}},{"1":"Preferences","2":"logging_exports_Preferences.html","3":{"1":[{"2":"<p>Describes the log preferences for a WebDriver session.</p>\n"}]}}],"2":[{"1":"Type","2":"logging_exports_Type.html","3":{"1":[{"2":"<p>Common log types.</p>\n"}]}}]},"7":{"1":[{"2":"<p>Defines WebDriver&#39;s logging system. The logging system is\nbroken into major components: local and remote logging.</p>\n<p>The local logging API, which is anchored by the <a href=\"logging_exports_Logger.html\">Logger</a> class is\nsimilar to Java&#39;s logging API. Loggers, retrieved by\n<a href=\"logging.html#getLogger\">getLogger(name)</a>, use hierarchical, dot-delimited\nnamespaces (e.g. &#34;&#34; &gt; &#34;webdriver&#34; &gt; &#34;webdriver.logging&#34;). Recorded log\nmessages are represented by the <a href=\"logging_exports_Entry.html\">Entry</a> class. You can capture log\nrecords by <a href=\"logging_exports_Logger.html#addHandler\">attaching</a> a handler function to the\ndesired logger. For convenience, you can quickly enable logging to the\nconsole by simply calling <a href=\"logging.html#installConsoleHandler\"> installConsoleHandler</a>.</p>\n<p>The <a href=\"https://github.com/SeleniumHQ/selenium/wiki/Logging\">remote logging API</a>\nallows you to retrieve logs from a remote WebDriver server. This API uses the\n<a href=\"logging_exports_Preferences.html\"><code>Preferences</code></a> class to define desired log levels prior to creating\na WebDriver session:</p>\n<pre><code> var prefs &#61; new logging.Preferences();\n prefs.setLevel(logging.Type.BROWSER, logging.Level.DEBUG);\n\n var caps &#61; Capabilities.chrome();\n caps.setLoggingPrefs(prefs);\n // ...\n</code></pre>\n<p>Remote log entries, also represented by the <a href=\"logging_exports_Entry.html\"><code>Entry</code></a> class, may be\nretrieved via <code>webdriver.WebDriver.Logs</code>:</p>\n<pre><code> driver.manage().logs().get(logging.Type.BROWSER)\n     .then(function(entries) {\n        entries.forEach(function(entry) {\n          console.log(&#39;[%s] %s&#39;, entry.level.name, entry.message);\n        });\n     });\n</code></pre>\n<p>** NOTE:** Only a few browsers support the remote logging API (notably\nFirefox and Chrome). Firefox supports basic logging functionality, while\nChrome exposes robust\n<a href=\"https://sites.google.com/a/chromium.org/chromedriver/logging\">performance logging</a>\noptions. Remote logging is still considered a non-standard feature, and the\nAPIs exposed by this module for it are non-frozen. This module will be\nupdated, possibly breaking backwards-compatibility, once logging is\nofficially defined by the\n<a href=\"http://www.w3.org/TR/webdriver/\">W3C WebDriver spec</a>.</p>\n"}]},"8":{"6":true},"12":[{"1":{"1":"addConsoleHandler","2":{"1":"lib/logging.js","2":671,"3":"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/logging.js#L671"},"3":{"1":[{"2":"<p>Adds the console handler to the given logger. The console handler will log\nall messages using the JavaScript Console API.</p>\n"}]}},"4":[{"1":"opt_logger","2":{"1":true,"6":{"1":[{"4":{"1":"Logger","2":"selenium-webdriver/lib/logging.Logger","3":{"1":"logging_exports_Logger.html"}}},{"10":true},{"9":true}]}},"3":{"1":[{"2":"<p>The logger to add the handler to; defaults\nto the root logger.</p>\n"}]}}]},{"1":{"1":"getLevel","2":{"1":"lib/logging.js","2":672,"3":"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/logging.js#L672"},"3":{"1":[{"2":"<p>Converts a level name or value to a <a href=\"logging_exports_Level.html\"><code>Level</code></a> value. If the name/value\nis not recognized, <a href=\"logging_exports_Level.html#Level.ALL\"><code>Level.ALL</code></a> will be returned.</p>\n"}]}},"4":[{"1":"nameOrValue","2":{"6":{"1":[{"4":{"1":"number","4":true}},{"4":{"1":"string","4":true}}]}},"3":{"1":[{"2":"<p>The log level name, or value, to\nconvert.</p>\n"}]}}],"5":{"2":{"4":{"1":"Level","2":"selenium-webdriver/lib/logging.Level","3":{"1":"logging_exports_Level.html"}}},"3":{"1":[{"2":"<p>The converted level.</p>\n"}]}}},{"1":{"1":"getLogger","2":{"1":"lib/logging.js","2":673,"3":"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/logging.js#L673"},"3":{"1":[{"2":"<p>Retrieves a named logger, creating it in the process. This function will\nimplicitly create the requested logger, and any of its parents, if they\ndo not yet exist.</p>\n<p>The log level will be unspecified for newly created loggers. Use\n<a href=\"logging_exports_Logger.html#setLevel\"><code>Logger#setLevel(level)</code></a> to explicitly set a level.</p>\n"}]}},"4":[{"1":"name","2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>the logger&#39;s name.</p>\n"}]}}],"5":{"2":{"4":{"1":"Logger","2":"selenium-webdriver/lib/logging.Logger","3":{"1":"logging_exports_Logger.html"}}},"3":{"1":[{"2":"<p>the requested logger.</p>\n"}]}}},{"1":{"1":"installConsoleHandler","2":{"1":"lib/logging.js","2":674,"3":"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/logging.js#L674"},"3":{"1":[{"2":"<p>Installs the console log handler on the root logger.</p>\n"}]}}},{"1":{"1":"removeConsoleHandler","2":{"1":"lib/logging.js","2":675,"3":"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/logging.js#L675"},"3":{"1":[{"2":"<p>Removes the console log handler from the given logger.</p>\n"}]},"10":[{"1":[{"2":"<p>exports.addConsoleHandler</p>\n"}]}]},"4":[{"1":"opt_logger","2":{"1":true,"6":{"1":[{"4":{"1":"Logger","2":"selenium-webdriver/lib/logging.Logger","3":{"1":"logging_exports_Logger.html"}}},{"10":true},{"9":true}]}},"3":{"1":[{"2":"<p>The logger to remove the handler from; defaults\nto the root logger.</p>\n"}]}}]}],"23":"logging.html","24":"selenium-webdriver/lib/logging"}]}}