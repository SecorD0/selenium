[null,[[["selenium-webdriver/lib/logging",null,null,null,[null,18,null,[null,null,"lib/logging.js"],[null,null,"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/logging.js#L18"]],[[["Entry",null,[[[null,"<p>Describes a single log entry.</p>\n"]]],null,[null,null,"logging_exports_Entry.html"]],["Level",null,[[[null,"<p>Defines a message level that may be used to control logging output.</p>\n"]]],null,[null,null,"logging_exports_Level.html"]],["LogManager",null,[[[null,"<p>Maintains a collection of loggers.</p>\n"]]],null,[null,null,"logging_exports_LogManager.html"]],["Logger",null,[[[null,"<p>An object used to log debugging messages.</p>\n"]]],null,[null,null,"logging_exports_Logger.html"]],["Preferences",null,[[[null,"<p>Describes the log preferences for a WebDriver session.</p>\n"]]],null,[null,null,"logging_exports_Preferences.html"]]],[["Type",null,[[[null,"<p>Common log types.</p>\n"]]],null,[null,null,"logging_exports_Type.html"]]],[]],[[[null,"<p>Defines WebDriver&#39;s logging system. The logging system is\nbroken into major components: local and remote logging.</p>\n<p>The local logging API, which is anchored by the <a href=\"logging_exports_Logger.html\">Logger</a> class is\nsimilar to Java&#39;s logging API. Loggers, retrieved by\n<a href=\"logging.html#getLogger\">getLogger(name)</a>, use hierarchical, dot-delimited\nnamespaces (e.g. &#34;&#34; &gt; &#34;webdriver&#34; &gt; &#34;webdriver.logging&#34;). Recorded log\nmessages are represented by the <a href=\"logging_exports_Entry.html\">Entry</a> class. You can capture log\nrecords by <a href=\"logging_exports_Logger.html#addHandler\">attaching</a> a handler function to the\ndesired logger. For convenience, you can quickly enable logging to the\nconsole by simply calling <a href=\"logging.html#installConsoleHandler\"> installConsoleHandler</a>.</p>\n<p>The <a href=\"https://github.com/SeleniumHQ/selenium/wiki/Logging\">remote logging API</a>\nallows you to retrieve logs from a remote WebDriver server. This API uses the\n<a href=\"logging_exports_Preferences.html\"><code>Preferences</code></a> class to define desired log levels prior to creating\na WebDriver session:</p>\n<pre><code> var prefs &#61; new logging.Preferences();\n prefs.setLevel(logging.Type.BROWSER, logging.Level.DEBUG);\n\n var caps &#61; Capabilities.chrome();\n caps.setLoggingPrefs(prefs);\n // ...\n</code></pre>\n<p>Remote log entries, also represented by the <a href=\"logging_exports_Entry.html\"><code>Entry</code></a> class, may be\nretrieved via <code>webdriver.WebDriver.Logs</code>:</p>\n<pre><code> driver.manage().logs().get(logging.Type.BROWSER)\n     .then(function(entries) {\n        entries.forEach(function(entry) {\n          console.log(&#39;[%s] %s&#39;, entry.level.name, entry.message);\n        });\n     });\n</code></pre>\n<p>** NOTE:** Only a few browsers support the remote logging API (notably\nFirefox and Chrome). Firefox supports basic logging functionality, while\nChrome exposes robust\n<a href=\"https://sites.google.com/a/chromium.org/chromedriver/logging\">performance logging</a>\noptions. Remote logging is still considered a non-standard feature, and the\nAPIs exposed by this module for it are non-frozen. This module will be\nupdated, possibly breaking backwards-compatibility, once logging is\nofficially defined by the\n<a href=\"http://www.w3.org/TR/webdriver/\">W3C WebDriver spec</a>.</p>\n"]]],[null,null,null,null,null,1],null,[],null,[[["addConsoleHandler",[null,577,null,[null,null,"lib/logging.js"],[null,null,"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/logging.js#L577"]],[[[null,"<p>Adds the console handler to the given logger. The console handler will log\nall messages using the JavaScript Console API.</p>\n"]]],null,null,null,null,null,[],[]],[],null,[["opt_logger",[1,null,null,null,null,[[[null,null,null,["Logger","selenium-webdriver/lib/logging.Logger",[null,null,[null,null,"logging_exports_Logger.html"]],null,[]]],[null,null,null,null,null,null,null,null,null,1],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>The logger to add the handler to; defaults\nto the root logger.</p>\n"]]]]],null,[]],[["getLevel",[null,202,null,[null,null,"lib/logging.js"],[null,null,"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/logging.js#L202"]],[[[null,"<p>Converts a level name or value to a <a href=\"logging_exports_Level.html\"><code>Level</code></a> value. If the name/value\nis not recognized, <a href=\"logging_exports_Level.html#Level.ALL\"><code>Level.ALL</code></a> will be returned.</p>\n"]]],null,null,null,null,null,[],[]],[],null,[["nameOrValue",[null,null,null,null,null,[[[null,null,null,["number",null,null,1,[]]],[null,null,null,["string",null,null,1,[]]]]]],[[[null,"<p>The log level name, or value, to\nconvert.</p>\n"]]]]],[null,[null,null,null,["Level","selenium-webdriver/lib/logging.Level",[null,null,[null,null,"logging_exports_Level.html"]],null,[]]],[[[null,"<p>The converted level.</p>\n"]]]],[]],[["getLogger",[null,519,null,[null,null,"lib/logging.js"],[null,null,"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/logging.js#L519"]],[[[null,"<p>Retrieves a named logger, creating it in the process. This function will\nimplicitly create the requested logger, and any of its parents, if they\ndo not yet exist.</p>\n<p>The log level will be unspecified for newly created loggers. Use\n<a href=\"logging_exports_Logger.html#setLevel\"><code>Logger#setLevel(level)</code></a> to explicitly set a level.</p>\n"]]],null,null,null,null,null,[],[]],[],null,[["name",[null,null,null,["string",null,null,1,[]]],[[[null,"<p>the logger&#39;s name.</p>\n"]]]]],[null,[null,null,null,["Logger","selenium-webdriver/lib/logging.Logger",[null,null,[null,null,"logging_exports_Logger.html"]],null,[]]],[[[null,"<p>the requested logger.</p>\n"]]]],[]],[["installConsoleHandler",[null,599,null,[null,null,"lib/logging.js"],[null,null,"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/logging.js#L599"]],[[[null,"<p>Installs the console log handler on the root logger.</p>\n"]]],null,null,null,null,null,[],[]],[],null,[],null,[]],[["removeConsoleHandler",[null,590,null,[null,null,"lib/logging.js"],[null,null,"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/logging.js#L590"]],[[[null,"<p>Removes the console log handler from the given logger.</p>\n"]]],null,null,null,null,null,[],[[[[null,"<p>exports.addConsoleHandler</p>\n"]]]]],[],null,[["opt_logger",[1,null,null,null,null,[[[null,null,null,["Logger","selenium-webdriver/lib/logging.Logger",[null,null,[null,null,"logging_exports_Logger.html"]],null,[]]],[null,null,null,null,null,null,null,null,null,1],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>The logger to remove the handler from; defaults\nto the root logger.</p>\n"]]]]],null,[]]],[],null,[],[],null,[],[],[],null,null,"logging.html","selenium-webdriver/lib/logging",[],[],[],[]]]]]