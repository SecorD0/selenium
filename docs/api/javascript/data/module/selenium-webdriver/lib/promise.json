[null,[[["selenium-webdriver/lib/promise",null,null,null,[null,23,null,[null,null,"lib/promise.js"],[null,null,"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/promise.js#L23"]],null,[[[null,"<p>Defines a handful of utility functions to simplify working\nwith promises.</p>\n"]]],[null,null,null,null,null,1],null,[],null,[[["checkedNodeCall",[null,72,null,[null,null,"lib/promise.js"],[null,null,"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/promise.js#L72"]],[[[null,"<p>Wraps a function that expects a node-style callback as its final\nargument. This callback expects two arguments: an error value (which will be\nnull if the call succeeded), and the success value as the second argument.\nThe callback will the resolve or reject the returned promise, based on its\narguments.</p>\n"]]],null,null,null,null,null,[],[]],[],null,[["fn",[null,null,null,["Function",null,null,null,[]]],[[[null,"<p>The function to wrap.</p>\n"]]]],["args",[null,1,null,null,null,null,null,1],[[[null,"<p>The arguments to apply to the function, excluding the\nfinal callback.</p>\n"]]]]],[null,[null,null,null,null,[[["then",[null,null,null,null,null,null,null,1]]]]],[[[null,"<p>A promise that will be resolved with the\nresult of the provided function&#39;s callback.</p>\n"]]]],[]],[["delayed",[null,53,null,[null,null,"lib/promise.js"],[null,null,"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/promise.js#L53"]],[[[null,"<p>Creates a promise that will be resolved at a set time in the future.</p>\n"]]],null,null,null,null,null,[],[]],[],null,[["ms",[null,null,null,["number",null,null,1,[]]],[[[null,"<p>The amount of time, in milliseconds, to wait before\nresolving the promise.</p>\n"]]]]],[null,[null,null,null,["Promise",null,null,1,[[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>The promise.</p>\n"]]]],[]],[["filter",[null,193,null,[null,null,"lib/promise.js"],[null,null,"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/promise.js#L193"]],[[[null,"<p>Calls a function for each element in an array, and if the function returns\ntrue adds the element to a new array.</p>\n<p>If the return value of the filter function is a promise, this function\nwill wait for it to be fulfilled before determining whether to insert the\nelement into the new array.</p>\n<p>If the filter function throws or returns a rejected promise, the promise\nreturned by this function will be rejected with the same reason. Only the\nfirst failure will be reported; all subsequent errors will be silently\nignored.</p>\n"]]],null,null,null,null,null,[],[]],["TYPE","SELF"],null,[["array",[null,null,null,null,null,[[[null,null,null,["Array",null,null,1,[[null,null,null,null,null,[[[null,null,null,["TYPE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]]]]],[null,null,null,["IThenable",null,null,1,[[null,null,null,["Array",null,null,1,[[null,null,null,null,null,[[[null,null,null,["TYPE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]]]]]]]]]]],[[[null,"<p>The array to iterate\nover, or a promise that will resolve to said array.</p>\n"]]]],["fn",[null,null,[null,[null,null,null,null,null,[[[null,null,null,["SELF",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[null,null,null,null,null,[[[null,null,null,["TYPE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[null,null,null,["number",null,null,1,[]]],[null,null,null,["Array",null,null,1,[[null,null,null,null,null,[[[null,null,null,["TYPE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]]]]]],[null,null,null,null,null,[[[null,null,null,["boolean",null,null,1,[]]],[null,null,null,["IThenable",null,null,1,[[null,null,null,["boolean",null,null,1,[]]]]]],[null,null,null,null,null,null,null,null,null,1]]]]]],[[[null,"<p>The function\nto call for each element in the array.</p>\n"]]]],["self",[1,null,null,null,null,[[[null,null,null,["SELF",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>The object to be used as the value of &#39;this&#39; within <code>fn</code>.</p>\n"]]]]],null,[]],[["finally",[null,121,null,[null,null,"lib/promise.js"],[null,null,"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/promise.js#L121"]],[[[null,"<p>Registers a listener to invoke when a promise is resolved, regardless\nof whether the promise&#39;s value was successfully computed. This function\nis synonymous with the <code>finally</code> clause in a synchronous API:</p>\n<pre><code> // Synchronous API:\n try {\n   doSynchronousWork();\n } finally {\n   cleanUp();\n }\n\n // Asynchronous promise API:\n doAsynchronousWork().finally(cleanUp);\n</code></pre>\n<p><strong>Note:</strong> similar to the <code>finally</code> clause, if the registered\ncallback returns a rejected promise or throws an error, it will silently\nreplace the rejection error (if any) from this promise:</p>\n<pre><code> try {\n   throw Error(&#39;one&#39;);\n } finally {\n   throw Error(&#39;two&#39;);  // Hides Error: one\n }\n\n let p &#61; Promise.reject(Error(&#39;one&#39;));\n promise.finally(p, function() {\n   throw Error(&#39;two&#39;);  // Hides Error: one\n });\n</code></pre>\n"]]],null,null,null,null,null,[],[]],["R"],null,[["promise",[null,null,null,["IThenable",null,null,1,[[null,null,null,null,null,null,null,1]]]],[[[null,"<p>The promise to add the listener to.</p>\n"]]]],["callback",[null,null,[null,null,[],[null,null,null,null,null,[[[null,null,null,["R",null,null,null,[]]],[null,null,null,["IThenable",null,null,1,[[null,null,null,null,null,[[[null,null,null,["R",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]]]]],[null,null,null,null,null,null,null,null,null,1]]]]]],[[[null,"<p>The function to call when\nthe promise is resolved.</p>\n"]]]]],[null,[null,null,null,["Promise",null,null,1,[[null,null,null,null,null,[[[null,null,null,["R",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]]]]],[[[null,"<p>A promise that will be resolved with the callback\nresult.</p>\n"]]]],[]],[["fullyResolved",[null,236,null,[null,null,"lib/promise.js"],[null,null,"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/promise.js#L236"]],[[[null,"<p>Returns a promise that will be resolved with the input value in a\nfully-resolved state. If the value is an array, each element will be fully\nresolved. Likewise, if the value is an object, all keys will be fully\nresolved. In both cases, all nested arrays and objects will also be\nfully resolved.  All fields are resolved in place; the returned promise will\nresolve on <code>value</code> and not a copy.</p>\n<p>Warning: This function makes no checks against objects that contain\ncyclical references:</p>\n<pre><code> var value &#61; {};\n value[&#39;self&#39;] &#61; value;\n promise.fullyResolved(value);  // Stack overflow.\n</code></pre>\n"]]],null,null,null,null,null,[],[]],[],null,[["value",[null,null,null,null,null,null,1],[[[null,"<p>The value to fully resolve.</p>\n"]]]]],[null,[null,null,null,null,[[["then",[null,null,null,null,null,null,null,1]]]]],[[[null,"<p>A promise for a fully resolved version\nof the input value.</p>\n"]]]],[]],[["isPromise",[null,34,null,[null,null,"lib/promise.js"],[null,null,"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/promise.js#L34"]],[[[null,"<p>Determines whether a <code>value</code> should be treated as a promise.\nAny object whose &#34;then&#34; property is a function will be considered a promise.</p>\n"]]],null,null,null,null,null,[],[]],[],null,[["value",[null,null,null,null,null,null,null,1],[[[null,"<p>The value to test.</p>\n"]]]]],[null,[null,null,null,["boolean",null,null,1,[]]],[[[null,"<p>Whether the value is a promise.</p>\n"]]]],[]],[["map",[null,153,null,[null,null,"lib/promise.js"],[null,null,"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/promise.js#L153"]],[[[null,"<p>Calls a function for each element in an array and inserts the result into a\nnew array, which is used as the fulfillment value of the promise returned\nby this function.</p>\n<p>If the return value of the mapping function is a promise, this function\nwill wait for it to be fulfilled before inserting it into the new array.</p>\n<p>If the mapping function throws or returns a rejected promise, the\npromise returned by this function will be rejected with the same reason.\nOnly the first failure will be reported; all subsequent errors will be\nsilently ignored.</p>\n"]]],null,null,null,null,null,[],[]],["TYPE","SELF"],null,[["array",[null,null,null,null,null,[[[null,null,null,["Array",null,null,1,[[null,null,null,null,null,[[[null,null,null,["TYPE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]]]]],[null,null,null,["IThenable",null,null,1,[[null,null,null,["Array",null,null,1,[[null,null,null,null,null,[[[null,null,null,["TYPE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]]]]]]]]]]],[[[null,"<p>The array to iterate\nover, or a promise that will resolve to said array.</p>\n"]]]],["fn",[null,null,[null,[null,null,null,null,null,[[[null,null,null,["SELF",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[null,null,null,null,null,[[[null,null,null,["TYPE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[null,null,null,["number",null,null,1,[]]],[null,null,null,["Array",null,null,1,[[null,null,null,null,null,[[[null,null,null,["TYPE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]]]]]],[null,null,null,null,null,null,null,1]]],[[[null,"<p>The\nfunction to call for each element in the array. This function should\nexpect three arguments (the element, the index, and the array itself.</p>\n"]]]],["self",[1,null,null,null,null,[[[null,null,null,["SELF",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>The object to be used as the value of &#39;this&#39; within <code>fn</code>.</p>\n"]]]]],null,[]]],[],null,[],[],null,[],[],[],null,null,"promise.html","selenium-webdriver/lib/promise",[],[],[],[]]]]]