{"2":{"1":[{"1":"Scheduler","5":{"1":"lib/promise.js","2":3249,"3":"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/promise.js#L3249"},"7":{"1":[{"2":"<p>Defines methods for coordinating the execution of asynchronous tasks.</p>\n"}]},"8":{"5":true,"9":true},"14":{"1":{"1":"Scheduler","2":{"1":"lib/promise.js","2":3249,"3":"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/promise.js#L3249"},"3":{"1":[{"2":"<p>Defines methods for coordinating the execution of asynchronous tasks.</p>\n"}]}}},"15":[{"1":{"1":"execute","2":{"1":"lib/promise.js","2":1950,"3":"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/promise.js#L1950"},"3":{"1":[{"2":"<p>Schedules a task for execution. If the task function is a generator, the\ntask will be executed using <a href=\"promise.html#consume\"><code>consume()</code></a>.</p>\n"}]}},"2":["T"],"4":[{"1":"fn","2":{"3":{"4":{"6":{"1":[{"4":{"1":"T"}},{"4":{"1":"IThenable","4":true,"5":[{"6":{"1":[{"4":{"1":"T"}},{"10":true}]}}]}},{"10":true}]}}}},"3":{"1":[{"2":"<p>The function to call to start the\ntask.</p>\n"}]}},{"1":"opt_description","2":{"1":true,"6":{"1":[{"4":{"1":"string","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>A description of the task for debugging\npurposes.</p>\n"}]}}],"5":{"2":{"4":{"1":"Thenable","2":"selenium-webdriver/lib/promise.Thenable","3":{"1":"promise_exports_Thenable.html"},"5":[{"6":{"1":[{"4":{"1":"T"}},{"10":true}]}}]}},"3":{"1":[{"2":"<p>A promise that will be resolved with the task\nresult.</p>\n"}]}}},{"1":{"1":"promise","2":{"1":"lib/promise.js","2":1961,"3":"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/promise.js#L1961"},"3":{"1":[{"2":"<p>Creates a new promise using the given resolver function.</p>\n"}]}},"2":["T"],"4":[{"1":"resolver","2":{"3":{"3":[{"3":{"3":[{"1":true,"6":{}}],"4":{"8":true}}},{"3":{"3":[{"1":true,"7":true}],"4":{"8":true}}}],"4":{"8":true}}}}],"5":{"2":{"4":{"1":"Thenable","2":"selenium-webdriver/lib/promise.Thenable","3":{"1":"promise_exports_Thenable.html"},"5":[{"6":{"1":[{"4":{"1":"T"}},{"10":true}]}}]}}}},{"1":{"1":"timeout","2":{"1":"lib/promise.js","2":1971,"3":"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/promise.js#L1971"},"3":{"1":[{"2":"<p>Schedules a <code>setTimeout</code> call.</p>\n"}]}},"4":[{"1":"ms","2":{"4":{"1":"number","4":true}},"3":{"1":[{"2":"<p>The timeout delay, in milliseconds.</p>\n"}]}},{"1":"opt_description","2":{"1":true,"6":{"1":[{"4":{"1":"string","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>A description to accompany the timeout.</p>\n"}]}}],"5":{"2":{"4":{"1":"Thenable","2":"selenium-webdriver/lib/promise.Thenable","3":{"1":"promise_exports_Thenable.html"},"5":[{"9":true}]}},"3":{"1":[{"2":"<p>A promise that will be resolved when the timeout\nfires.</p>\n"}]}}},{"1":{"1":"wait","2":{"1":"lib/promise.js","2":2006,"3":"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/promise.js#L2006"},"3":{"1":[{"2":"<p>Schedules a task to wait for a condition to hold.</p>\n<p>If the condition is defined as a function, it may return any value. Promies\nwill be resolved before testing if the condition holds (resolution time\ncounts towards the timeout). Once resolved, values are always evaluated as\nbooleans.</p>\n<p>If the condition function throws, or returns a rejected promise, the\nwait task will fail.</p>\n<p>If the condition is defined as a promise, the scheduler will wait for it to\nsettle. If the timeout expires before the promise settles, the promise\nreturned by this function will be rejected.</p>\n<p>If this function is invoked with <code>timeout &#61;&#61;&#61; 0</code>, or the timeout is\nomitted, this scheduler will wait indefinitely for the condition to be\nsatisfied.</p>\n"}]}},"2":["T"],"4":[{"1":"condition","2":{"6":{"1":[{"4":{"1":"IThenable","4":true,"5":[{"6":{"1":[{"4":{"1":"T"}},{"10":true}]}}]}},{"3":{"4":{"8":true}}}]}},"3":{"1":[{"2":"<p>The condition to poll,\nor a promise to wait on.</p>\n"}]}},{"1":"opt_timeout","2":{"1":true,"6":{"1":[{"4":{"1":"number","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>How long to wait, in milliseconds, for the\ncondition to hold before timing out. If omitted, the flow will wait\nindefinitely.</p>\n"}]}},{"1":"opt_message","2":{"1":true,"6":{"1":[{"4":{"1":"string","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>An optional error message to include if the\nwait times out; defaults to the empty string.</p>\n"}]}}],"5":{"2":{"4":{"1":"Thenable","2":"selenium-webdriver/lib/promise.Thenable","3":{"1":"promise_exports_Thenable.html"},"5":[{"6":{"1":[{"4":{"1":"T"}},{"10":true}]}}]}},"3":{"1":[{"2":"<p>A promise that will be fulfilled\nwhen the condition has been satisified. The promise shall be rejected\nif the wait times out waiting for the condition.</p>\n"}]}},"6":[{"2":{"6":{"1":[{"4":{"1":"TypeError","4":true}},{"10":true}]}},"3":{"1":[{"2":"<p>If condition is not a function or promise or if timeout\nis not a number &gt;&#61; 0.</p>\n"}]}}]}],"27":[{"1":"ControlFlow","2":"selenium-webdriver/lib/promise.ControlFlow","3":{"1":"promise_exports_ControlFlow.html"}}],"21":{"1":{"1":"selenium-webdriver/lib/promise","3":{"1":"promise.html"}},"2":1},"23":"promise_exports_Scheduler.html","24":"selenium-webdriver/lib/promise.Scheduler"}]}}