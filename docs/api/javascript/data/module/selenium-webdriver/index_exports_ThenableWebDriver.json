{"2":{"1":[{"1":"ThenableWebDriver","5":{"1":"index.js","2":682,"3":"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/index.js#L682"},"7":{"1":[{"2":"<p>A thenable wrapper around a <a href=\"lib/webdriver_exports_IWebDriver.html\">IWebDriver</a>\ninstance that allows commands to be issued directly instead of having to\nrepeatedly call <code>then</code>:</p>\n<pre><code> let driver &#61; new Builder().build();\n driver.then(d &#61;&gt; d.get(url));  // You can do this...\n driver.get(url);               // ...or this\n</code></pre>\n<p>If the driver instance fails to resolve (e.g. the session cannot be created),\nevery issued command will fail.</p>\n"}]},"8":{"5":true},"12":[{"1":{"1":"ThenableWebDriver.createSession","2":{"1":"index.js","2":115,"3":"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/index.js#L115"},"3":{}},"4":[{"1":"args","2":{"2":true,"8":true}}]}],"14":{"1":{"1":"ThenableWebDriver","2":{"1":"index.js","2":682,"3":"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/index.js#L682"},"3":{"1":[{"2":"<p>A thenable wrapper around a <a href=\"lib/webdriver_exports_IWebDriver.html\">IWebDriver</a>\ninstance that allows commands to be issued directly instead of having to\nrepeatedly call <code>then</code>:</p>\n<pre><code> let driver &#61; new Builder().build();\n driver.then(d &#61;&gt; d.get(url));  // You can do this...\n driver.get(url);               // ...or this\n</code></pre>\n<p>If the driver instance fails to resolve (e.g. the session cannot be created),\nevery issued command will fail.</p>\n"}]}}},"15":[{"1":{"1":"actions","2":{"1":"lib/webdriver.js","2":307,"3":"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/webdriver.js#L307"},"3":{"1":[{"2":"<p>Creates a new action sequence using this driver. The sequence will not be\nscheduled for execution until <a href=\"lib/actions_exports_ActionSequence.html#perform\"><code>actions.ActionSequence#perform</code></a> is\ncalled. Example:</p>\n<pre><code> driver.actions().\n     mouseDown(element1).\n     mouseMove(element2).\n     mouseUp().\n     perform();\n</code></pre>\n"}]}},"5":{"2":{"4":{"1":"ActionSequence","2":"selenium-webdriver/lib/actions.ActionSequence","3":{"1":"lib/actions_exports_ActionSequence.html"}}},"3":{"1":[{"2":"<p>A new action sequence for this instance.</p>\n"}]}}},{"1":{"1":"call","2":{"1":"lib/webdriver.js","2":448,"3":"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/webdriver.js#L448"},"3":{"1":[{"2":"<p>Schedules a command to execute a custom function.</p>\n"}]}},"2":["T"],"4":[{"1":"fn","2":{"3":{"3":[{"2":true,"8":true}],"4":{"6":{"1":[{"4":{"1":"T"}},{"4":{"1":"IThenable","4":true,"5":[{"6":{"1":[{"4":{"1":"T"}},{"10":true}]}}]}},{"10":true}]}}}},"3":{"1":[{"2":"<p>The function to execute.</p>\n"}]}},{"1":"opt_scope","2":{"1":true,"6":{"1":[{"4":{"1":"Object","4":true}},{"10":true},{"9":true}]}},"3":{"1":[{"2":"<p>The object in whose scope to execute the function.</p>\n"}]}},{"1":"var_args","2":{"2":true,"7":true},"3":{"1":[{"2":"<p>Any arguments to pass to the function.</p>\n"}]}}],"5":{"2":{"4":{"1":"Thenable","2":"selenium-webdriver/lib/promise.Thenable","3":{"1":"lib/promise_exports_Thenable.html"},"5":[{"6":{"1":[{"4":{"1":"T"}},{"10":true}]}}]}},"3":{"1":[{"2":"<p>A promise that will be resolved&#39;\nwith the function&#39;s result.</p>\n"}]}}},{"1":{"1":"cancel","2":{"1":"lib/promise.js","2":980,"3":"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/promise.js#L980"},"3":{"1":[{"2":"<p>Requests the cancellation of the computation of this promise&#39;s value,\nrejecting the promise in the process. This method is a no-op if the promise\nhas already been resolved.</p>\n"}]}},"4":[{"1":"opt_reason","2":{"1":true,"6":{"1":[{"4":{"1":"string","4":true}},{"4":{"1":"Error","4":true}},{"10":true},{"9":true}]}},"3":{"1":[{"2":"<p>The reason this promise is being\ncancelled. This value will be wrapped in a <a href=\"lib/promise_exports_CancellationError.html\"><code>CancellationError</code></a>.</p>\n"}]}}]},{"1":{"1":"catch","2":{"1":"lib/promise.js","2":938,"3":"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/promise.js#L938"},"3":{"1":[{"2":"<p>Registers a listener for when this promise is rejected. This is synonymous\nwith the <code>catch</code> clause in a synchronous API:</p>\n<pre><code> // Synchronous API:\n try {\n   doSynchronousWork();\n } catch (ex) {\n   console.error(ex);\n }\n\n // Asynchronous promise API:\n doAsynchronousWork().catch(function(ex) {\n   console.error(ex);\n });\n</code></pre>\n"}]}},"2":["R"],"4":[{"1":"errback","2":{"3":{"3":[{"7":true}],"4":{"6":{"1":[{"4":{"1":"R"}},{"4":{"1":"IThenable","4":true,"5":[{"6":{"1":[{"4":{"1":"R"}},{"10":true}]}}]}},{"10":true}]}}}},"3":{"1":[{"2":"<p>The\nfunction to call if this promise is rejected. The function should\nexpect a single argument: the rejection reason.</p>\n"}]}}],"5":{"2":{"4":{"1":"Thenable","2":"selenium-webdriver/lib/promise.Thenable","3":{"1":"lib/promise_exports_Thenable.html"},"5":[{"6":{"1":[{"4":{"1":"R"}},{"10":true}]}}]}},"3":{"1":[{"2":"<p>A new promise which will be resolved with the result\nof the invoked callback.</p>\n"}]}}},{"1":{"1":"close","2":{"1":"lib/webdriver.js","2":541,"3":"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/webdriver.js#L541"},"3":{"1":[{"2":"<p>Schedules a command to close the current window.</p>\n"}]}},"5":{"2":{"4":{"1":"Thenable","2":"selenium-webdriver/lib/promise.Thenable","3":{"1":"lib/promise_exports_Thenable.html"},"5":[{"9":true}]}},"3":{"1":[{"2":"<p>A promise that will be resolved\nwhen this command has completed.</p>\n"}]}}},{"1":{"1":"controlFlow","2":{"1":"lib/webdriver.js","2":247,"3":"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/webdriver.js#L247"},"3":{}},"5":{"2":{"4":{"1":"ControlFlow","2":"selenium-webdriver/lib/promise.ControlFlow","3":{"1":"lib/promise_exports_ControlFlow.html"}}},"3":{"1":[{"2":"<p>The control flow used by this instance.</p>\n"}]}}},{"1":{"1":"executeAsyncScript","2":{"1":"lib/webdriver.js","2":437,"3":"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/webdriver.js#L437"},"3":{"1":[{"2":"<p>Schedules a command to execute asynchronous JavaScript in the context of the\ncurrently selected frame or window. The script fragment will be executed as\nthe body of an anonymous function. If the script is provided as a function\nobject, that function will be converted to a string for injection into the\ntarget window.</p>\n<p>Any arguments provided in addition to the script will be included as script\narguments and may be referenced using the <code>arguments</code> object.\nArguments may be a boolean, number, string, or <code>WebElement</code>.\nArrays and objects may also be used as script arguments as long as each item\nadheres to the types previously mentioned.</p>\n<p>Unlike executing synchronous JavaScript with <a href=\"index_exports_ThenableWebDriver.html#executeScript\"><code>#executeScript</code></a>,\nscripts executed with this function must explicitly signal they are finished\nby invoking the provided callback. This callback will always be injected\ninto the executed function as the last argument, and thus may be referenced\nwith <code>arguments[arguments.length - 1]</code>. The following steps will be\ntaken for resolving this functions return value against the first argument\nto the script&#39;s callback function:</p>\n<ul><li>For a HTML element, the value will resolve to a\n<a href=\"lib/webdriver_exports_WebElement.html\"><code>WebElement</code></a></li><li>Null and undefined return values will resolve to null</li><li>Booleans, numbers, and strings will resolve as is</li><li>Functions will resolve to their string representation</li><li>For arrays and objects, each member item will be converted according to\nthe rules above</li></ul>\n<p><strong>Example #1:</strong> Performing a sleep that is synchronized with the currently\nselected window:</p>\n<pre><code> var start &#61; new Date().getTime();\n driver.executeAsyncScript(\n     &#39;window.setTimeout(arguments[arguments.length - 1], 500);&#39;).\n     then(function() {\n       console.log(\n           &#39;Elapsed time: &#39; &#43; (new Date().getTime() - start) &#43; &#39; ms&#39;);\n     });\n</code></pre>\n<p><strong>Example #2:</strong> Synchronizing a test with an AJAX application:</p>\n<pre><code> var button &#61; driver.findElement(By.id(&#39;compose-button&#39;));\n button.click();\n driver.executeAsyncScript(\n     &#39;var callback &#61; arguments[arguments.length - 1];&#39; &#43;\n     &#39;mailClient.getComposeWindowWidget().onload(callback);&#39;);\n driver.switchTo().frame(&#39;composeWidget&#39;);\n driver.findElement(By.id(&#39;to&#39;)).sendKeys(&#39;dog&#64;example.com&#39;);\n</code></pre>\n<p><strong>Example #3:</strong> Injecting a XMLHttpRequest and waiting for the result. In\nthis example, the inject script is specified with a function literal. When\nusing this format, the function is converted to a string for injection, so it\nshould not reference any symbols not defined in the scope of the page under\ntest.</p>\n<pre><code> driver.executeAsyncScript(function() {\n   var callback &#61; arguments[arguments.length - 1];\n   var xhr &#61; new XMLHttpRequest();\n   xhr.open(&#34;GET&#34;, &#34;/resource/data.json&#34;, true);\n   xhr.onreadystatechange &#61; function() {\n     if (xhr.readyState &#61;&#61; 4) {\n       callback(xhr.responseText);\n     }\n   };\n   xhr.send(&#39;&#39;);\n }).then(function(str) {\n   console.log(JSON.parse(str)[&#39;food&#39;]);\n });\n</code></pre>\n"}]}},"2":["T"],"4":[{"1":"script","2":{"6":{"1":[{"4":{"1":"string","4":true}},{"4":{"1":"Function"}}]}},"3":{"1":[{"2":"<p>The script to execute.</p>\n"}]}},{"1":"var_args","2":{"2":true,"7":true},"3":{"1":[{"2":"<p>The arguments to pass to the script.</p>\n"}]}}],"5":{"2":{"4":{"1":"Thenable","2":"selenium-webdriver/lib/promise.Thenable","3":{"1":"lib/promise_exports_Thenable.html"},"5":[{"6":{"1":[{"4":{"1":"T"}},{"10":true}]}}]}},"3":{"1":[{"2":"<p>A promise that will resolve to the\nscripts return value.</p>\n"}]}}},{"1":{"1":"executeScript","2":{"1":"lib/webdriver.js","2":359,"3":"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/webdriver.js#L359"},"3":{"1":[{"2":"<p>Schedules a command to execute JavaScript in the context of the currently\nselected frame or window. The script fragment will be executed as the body\nof an anonymous function. If the script is provided as a function object,\nthat function will be converted to a string for injection into the target\nwindow.</p>\n<p>Any arguments provided in addition to the script will be included as script\narguments and may be referenced using the <code>arguments</code> object.\nArguments may be a boolean, number, string, or <a href=\"lib/webdriver_exports_WebElement.html\">WebElement</a>.\nArrays and objects may also be used as script arguments as long as each item\nadheres to the types previously mentioned.</p>\n<p>The script may refer to any variables accessible from the current window.\nFurthermore, the script will execute in the window&#39;s context, thus\n<code>document</code> may be used to refer to the current document. Any local\nvariables will not be available once the script has finished executing,\nthough global variables will persist.</p>\n<p>If the script has a return value (i.e. if the script contains a return\nstatement), then the following steps will be taken for resolving this\nfunctions return value:</p>\n<ul><li>For a HTML element, the value will resolve to a <a href=\"lib/webdriver_exports_WebElement.html\">WebElement</a></li><li>Null and undefined return values will resolve to null</li><li>Booleans, numbers, and strings will resolve as is</li><li>Functions will resolve to their string representation</li><li>For arrays and objects, each member item will be converted according to\nthe rules above</li></ul>\n"}]}},"2":["T"],"4":[{"1":"script","2":{"6":{"1":[{"4":{"1":"string","4":true}},{"4":{"1":"Function"}}]}},"3":{"1":[{"2":"<p>The script to execute.</p>\n"}]}},{"1":"var_args","2":{"2":true,"7":true},"3":{"1":[{"2":"<p>The arguments to pass to the script.</p>\n"}]}}],"5":{"2":{"4":{"1":"Thenable","2":"selenium-webdriver/lib/promise.Thenable","3":{"1":"lib/promise_exports_Thenable.html"},"5":[{"6":{"1":[{"4":{"1":"T"}},{"10":true}]}}]}},"3":{"1":[{"2":"<p>A promise that will resolve to the\nscripts return value.</p>\n"}]}}},{"1":{"1":"findElement","2":{"1":"lib/webdriver.js","2":604,"3":"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/webdriver.js#L604"},"3":{"1":[{"2":"<p>Schedule a command to find an element on the page. If the element cannot be\nfound, a <code>bot.ErrorCode.NO_SUCH_ELEMENT</code> result will be returned\nby the driver. Unlike other commands, this error cannot be suppressed. In\nother words, scheduling a command to find an element doubles as an assert\nthat the element is present on the page. To test whether an element is\npresent on the page, use <a href=\"index_exports_ThenableWebDriver.html#findElements\"><code>#findElements</code></a>:</p>\n<pre><code> driver.findElements(By.id(&#39;foo&#39;))\n     .then(found &#61;&gt; console.log(&#39;Element found? %s&#39;, !!found.length));\n</code></pre>\n<p>The search criteria for an element may be defined using one of the\nfactories in the <code>webdriver.By</code> namespace, or as a short-hand\n<code>webdriver.By.Hash</code> object. For example, the following two statements\nare equivalent:</p>\n<pre><code> var e1 &#61; driver.findElement(By.id(&#39;foo&#39;));\n var e2 &#61; driver.findElement({id:&#39;foo&#39;});\n</code></pre>\n<p>You may also provide a custom locator function, which takes as input this\ninstance and returns a <a href=\"lib/webdriver_exports_WebElement.html\"><code>WebElement</code></a>, or a promise that will resolve\nto a WebElement. If the returned promise resolves to an array of\nWebElements, WebDriver will use the first element. For example, to find the\nfirst visible link on a page, you could write:</p>\n<pre><code> var link &#61; driver.findElement(firstVisibleLink);\n\n function firstVisibleLink(driver) {\n   var links &#61; driver.findElements(By.tagName(&#39;a&#39;));\n   return promise.filter(links, function(link) {\n     return link.isDisplayed();\n   });\n }\n</code></pre>\n"}]}},"4":[{"1":"locator","2":{"6":{"1":[{"4":{"1":"By","2":"selenium-webdriver/lib/by.By","3":{"1":"lib/by_exports_By.html"}}},{"4":{"1":"Function"}}]}},"3":{"1":[{"2":"<p>The locator to use.</p>\n"}]}}],"5":{"2":{"4":{"1":"WebElementPromise","2":"selenium-webdriver/lib/webdriver.WebElementPromise","3":{"1":"lib/webdriver_exports_WebElementPromise.html"}}},"3":{"1":[{"2":"<p>A WebElement that can be used to issue\ncommands against the located element. If the element is not found, the\nelement will be invalidated and all scheduled commands aborted.</p>\n"}]}}},{"1":{"1":"findElements","2":{"1":"lib/webdriver.js","2":613,"3":"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/webdriver.js#L613"},"3":{"1":[{"2":"<p>Schedule a command to search for multiple elements on the page.</p>\n"}]}},"4":[{"1":"locator","2":{"6":{"1":[{"4":{"1":"By","2":"selenium-webdriver/lib/by.By","3":{"1":"lib/by_exports_By.html"}}},{"4":{"1":"Function"}}]}},"3":{"1":[{"2":"<p>The locator to use.</p>\n"}]}}],"5":{"2":{"4":{"1":"Thenable","2":"selenium-webdriver/lib/promise.Thenable","3":{"1":"lib/promise_exports_Thenable.html"},"5":[{"4":{"1":"Array","4":true,"5":[{"4":{"1":"WebElement","2":"selenium-webdriver/lib/webdriver.WebElement","3":{"1":"lib/webdriver_exports_WebElement.html"}}}]}}]}},"3":{"1":[{"2":"<p>A\npromise that will resolve to an array of WebElements.</p>\n"}]}}},{"1":{"1":"get","2":{"1":"lib/webdriver.js","2":549,"3":"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/webdriver.js#L549"},"3":{"1":[{"2":"<p>Schedules a command to navigate to the given URL.</p>\n"}]}},"4":[{"1":"url","2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>The fully qualified URL to open.</p>\n"}]}}],"5":{"2":{"4":{"1":"Thenable","2":"selenium-webdriver/lib/promise.Thenable","3":{"1":"lib/promise_exports_Thenable.html"},"5":[{"9":true}]}},"3":{"1":[{"2":"<p>A promise that will be resolved\nwhen the document has finished loading.</p>\n"}]}}},{"1":{"1":"getAllWindowHandles","2":{"1":"lib/webdriver.js","2":524,"3":"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/webdriver.js#L524"},"3":{"1":[{"2":"<p>Schedules a command to retrieve the current list of available window handles.</p>\n"}]}},"5":{"2":{"4":{"1":"Thenable","2":"selenium-webdriver/lib/promise.Thenable","3":{"1":"lib/promise_exports_Thenable.html"},"5":[{"4":{"1":"Array","4":true,"5":[{"4":{"1":"string","4":true}}]}}]}},"3":{"1":[{"2":"<p>A promise that will\nbe resolved with an array of window handles.</p>\n"}]}}},{"1":{"1":"getCapabilities","2":{"1":"lib/webdriver.js","2":282,"3":"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/webdriver.js#L282"},"3":{}},"5":{"2":{"4":{"1":"Thenable","2":"selenium-webdriver/lib/promise.Thenable","3":{"1":"lib/promise_exports_Thenable.html"},"5":[{"4":{"1":"Capabilities","2":"selenium-webdriver/lib/capabilities.Capabilities","3":{"1":"lib/capabilities_exports_Capabilities.html"}}}]}},"3":{"1":[{"2":"<p>A promise that will resolve with\nthe this instance&#39;s capabilities.</p>\n"}]}}},{"1":{"1":"getCurrentUrl","2":{"1":"lib/webdriver.js","2":556,"3":"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/webdriver.js#L556"},"3":{"1":[{"2":"<p>Schedules a command to retrieve the URL of the current page.</p>\n"}]}},"5":{"2":{"4":{"1":"Thenable","2":"selenium-webdriver/lib/promise.Thenable","3":{"1":"lib/promise_exports_Thenable.html"},"5":[{"4":{"1":"string","4":true}}]}},"3":{"1":[{"2":"<p>A promise that will be\nresolved with the current URL.</p>\n"}]}}},{"1":{"1":"getExecutor","2":{"1":"lib/webdriver.js","2":271,"3":"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/webdriver.js#L271"},"3":{}},"5":{"2":{"4":{"1":"Executor","2":"selenium-webdriver/lib/command.Executor","3":{"1":"lib/command_exports_Executor.html"}}},"3":{"1":[{"2":"<p>The command executor used by this instance.</p>\n"}]}}},{"1":{"1":"getPageSource","2":{"1":"lib/webdriver.js","2":534,"3":"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/webdriver.js#L534"},"3":{"1":[{"2":"<p>Schedules a command to retrieve the current page&#39;s source. The page source\nreturned is a representation of the underlying DOM: do not expect it to be\nformatted or escaped in the same way as the response sent from the web\nserver.</p>\n"}]}},"5":{"2":{"4":{"1":"Thenable","2":"selenium-webdriver/lib/promise.Thenable","3":{"1":"lib/promise_exports_Thenable.html"},"5":[{"4":{"1":"string","4":true}}]}},"3":{"1":[{"2":"<p>A promise that will be\nresolved with the current page source.</p>\n"}]}}},{"1":{"1":"getSession","2":{"1":"lib/webdriver.js","2":276,"3":"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/webdriver.js#L276"},"3":{}},"5":{"2":{"4":{"1":"Thenable","2":"selenium-webdriver/lib/promise.Thenable","3":{"1":"lib/promise_exports_Thenable.html"},"5":[{"4":{"1":"Session","2":"selenium-webdriver/lib/session.Session","3":{"1":"lib/session_exports_Session.html"}}}]}},"3":{"1":[{"2":"<p>A promise for this client&#39;s session.</p>\n"}]}}},{"1":{"1":"getTitle","2":{"1":"lib/webdriver.js","2":563,"3":"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/webdriver.js#L563"},"3":{"1":[{"2":"<p>Schedules a command to retrieve the current page&#39;s title.</p>\n"}]}},"5":{"2":{"4":{"1":"Thenable","2":"selenium-webdriver/lib/promise.Thenable","3":{"1":"lib/promise_exports_Thenable.html"},"5":[{"4":{"1":"string","4":true}}]}},"3":{"1":[{"2":"<p>A promise that will be\nresolved with the current page&#39;s title.</p>\n"}]}}},{"1":{"1":"getWindowHandle","2":{"1":"lib/webdriver.js","2":517,"3":"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/webdriver.js#L517"},"3":{"1":[{"2":"<p>Schedules a command to retrieve the current window handle.</p>\n"}]}},"5":{"2":{"4":{"1":"Thenable","2":"selenium-webdriver/lib/promise.Thenable","3":{"1":"lib/promise_exports_Thenable.html"},"5":[{"4":{"1":"string","4":true}}]}},"3":{"1":[{"2":"<p>A promise that will be\nresolved with the current window handle.</p>\n"}]}}},{"1":{"1":"manage","2":{"1":"lib/webdriver.js","2":632,"3":"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/webdriver.js#L632"},"3":{}},"5":{"2":{"4":{"1":"Options","2":"selenium-webdriver/lib/webdriver.Options","3":{"1":"lib/webdriver_exports_Options.html"}}},"3":{"1":[{"2":"<p>The options interface for this instance.</p>\n"}]}}},{"1":{"1":"navigate","2":{"1":"lib/webdriver.js","2":637,"3":"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/webdriver.js#L637"},"3":{}},"5":{"2":{"4":{"1":"Navigation","2":"selenium-webdriver/lib/webdriver.Navigation","3":{"1":"lib/webdriver_exports_Navigation.html"}}},"3":{"1":[{"2":"<p>The navigation interface for this instance.</p>\n"}]}}},{"1":{"1":"quit","2":{"1":"lib/webdriver.js","2":292,"3":"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/webdriver.js#L292"},"3":{"1":[{"2":"<p>Terminates the browser session. After calling quit, this instance will be\ninvalidated and may no longer be used to issue commands against the\nbrowser.</p>\n"}]}},"5":{"2":{"4":{"1":"Thenable","2":"selenium-webdriver/lib/promise.Thenable","3":{"1":"lib/promise_exports_Thenable.html"},"5":[{"9":true}]}},"3":{"1":[{"2":"<p>A promise that will be resolved when the\ncommand has completed.</p>\n"}]}}},{"1":{"1":"schedule","2":{"1":"lib/webdriver.js","2":259,"3":"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/webdriver.js#L259"},"3":{"1":[{"2":"<p>Schedules a <a href=\"lib/command_exports_Command.html\"><code>command.Command</code></a> to be executed by this driver&#39;s\n<a href=\"lib/command_exports_Executor.html\"><code>command.Executor</code></a>.</p>\n"}]}},"2":["T"],"4":[{"1":"command","2":{"4":{"1":"Command","2":"selenium-webdriver/lib/command.Command","3":{"1":"lib/command_exports_Command.html"}}},"3":{"1":[{"2":"<p>The command to schedule.</p>\n"}]}},{"1":"description","2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>A description of the command for debugging.</p>\n"}]}}],"5":{"2":{"4":{"1":"Thenable","2":"selenium-webdriver/lib/promise.Thenable","3":{"1":"lib/promise_exports_Thenable.html"},"5":[{"6":{"1":[{"4":{"1":"T"}},{"10":true}]}}]}},"3":{"1":[{"2":"<p>A promise that will be resolved\nwith the command result.</p>\n"}]}}},{"1":{"1":"setFileDetector","2":{"1":"lib/webdriver.js","2":266,"3":"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/webdriver.js#L266"},"3":{"1":[{"2":"<p>Sets the <a href=\"lib/input_exports_FileDetector.html\">file detector</a> that should be\nused with this instance.</p>\n"}]}},"4":[{"1":"detector","2":{"6":{"1":[{"4":{"1":"FileDetector","2":"selenium-webdriver/lib/input.FileDetector","3":{"1":"lib/input_exports_FileDetector.html"}}},{"10":true}]}},"3":{"1":[{"2":"<p>The detector to use or <code>null</code>.</p>\n"}]}}]},{"1":{"1":"sleep","2":{"1":"lib/webdriver.js","2":510,"3":"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/webdriver.js#L510"},"3":{"1":[{"2":"<p>Schedules a command to make the driver sleep for the given amount of time.</p>\n"}]}},"4":[{"1":"ms","2":{"4":{"1":"number","4":true}},"3":{"1":[{"2":"<p>The amount of time, in milliseconds, to sleep.</p>\n"}]}}],"5":{"2":{"4":{"1":"Thenable","2":"selenium-webdriver/lib/promise.Thenable","3":{"1":"lib/promise_exports_Thenable.html"},"5":[{"9":true}]}},"3":{"1":[{"2":"<p>A promise that will be resolved\nwhen the sleep has finished.</p>\n"}]}}},{"1":{"1":"switchTo","2":{"1":"lib/webdriver.js","2":643,"3":"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/webdriver.js#L643"},"3":{}},"5":{"2":{"4":{"1":"TargetLocator","2":"selenium-webdriver/lib/webdriver.TargetLocator","3":{"1":"lib/webdriver_exports_TargetLocator.html"}}},"3":{"1":[{"2":"<p>The target locator interface for this\ninstance.</p>\n"}]}}},{"1":{"1":"takeScreenshot","2":{"1":"lib/webdriver.js","2":627,"3":"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/webdriver.js#L627"},"3":{"1":[{"2":"<p>Schedule a command to take a screenshot. The driver makes a best effort to\nreturn a screenshot of the following, in order of preference:</p>\n<ol><li>Entire page</li><li>Current window</li><li>Visible portion of the current frame</li><li>The entire display containing the browser</li></ol>\n"}]}},"5":{"2":{"4":{"1":"Thenable","2":"selenium-webdriver/lib/promise.Thenable","3":{"1":"lib/promise_exports_Thenable.html"},"5":[{"4":{"1":"string","4":true}}]}},"3":{"1":[{"2":"<p>A promise that will be\nresolved to the screenshot as a base-64 encoded PNG.</p>\n"}]}}},{"1":{"1":"then","2":{"1":"lib/promise.js","2":913,"3":"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/promise.js#L913"},"3":{"1":[{"2":"<p>Registers listeners for when this instance is resolved.</p>\n"}]},"9":[{"1":"IThenable","4":true}]},"2":["R"],"4":[{"1":"opt_callback","2":{"1":true,"6":{"1":[{"3":{"3":[{"6":{"1":[{"4":{"1":"T"}},{"10":true}]}}],"4":{"6":{"1":[{"4":{"1":"R"}},{"4":{"1":"IThenable","4":true,"5":[{"6":{"1":[{"4":{"1":"R"}},{"10":true}]}}]}},{"10":true}]}}}},{"10":true},{"9":true}]}},"3":{"1":[{"2":"<p>The\nfunction to call if this promise is successfully resolved. The function\nshould expect a single argument: the promise&#39;s resolved value.</p>\n"}]}},{"1":"opt_errback","2":{"1":true,"6":{"1":[{"3":{"3":[{"7":true}],"4":{"6":{"1":[{"4":{"1":"R"}},{"4":{"1":"IThenable","4":true,"5":[{"6":{"1":[{"4":{"1":"R"}},{"10":true}]}}]}},{"10":true}]}}}},{"10":true},{"9":true}]}},"3":{"1":[{"2":"<p>The function to call if this promise is rejected. The function should\nexpect a single argument: the rejection reason.</p>\n"}]}}],"5":{"2":{"4":{"1":"Thenable","2":"selenium-webdriver/lib/promise.Thenable","3":{"1":"lib/promise_exports_Thenable.html"},"5":[{"6":{"1":[{"4":{"1":"R"}},{"10":true}]}}]}},"3":{"1":[{"2":"<p>A new promise which will be resolved with the result\nof the invoked callback.</p>\n"}]}}},{"1":{"1":"touchActions","2":{"1":"lib/webdriver.js","2":321,"3":"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/webdriver.js#L321"},"3":{"1":[{"2":"<p>Creates a new touch sequence using this driver. The sequence will not be\nscheduled for execution until <a href=\"lib/actions_exports_TouchSequence.html#perform\"><code>actions.TouchSequence#perform</code></a> is\ncalled. Example:</p>\n<pre><code> driver.touchActions().\n     tap(element1).\n     doubleTap(element2).\n     perform();\n</code></pre>\n"}]}},"5":{"2":{"4":{"1":"TouchSequence","2":"selenium-webdriver/lib/actions.TouchSequence","3":{"1":"lib/actions_exports_TouchSequence.html"}}},"3":{"1":[{"2":"<p>A new touch sequence for this instance.</p>\n"}]}}},{"1":{"1":"wait","2":{"1":"lib/webdriver.js","2":502,"3":"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/lib/webdriver.js#L502"},"3":{"1":[{"2":"<p>Schedules a command to wait for a condition to hold. The condition may be\nspecified by a <a href=\"lib/webdriver_exports_Condition.html\"><code>Condition</code></a>, as a custom function, or as any\npromise-like thenable.</p>\n<p>For a <a href=\"lib/webdriver_exports_Condition.html\"><code>Condition</code></a> or function, the wait will repeatedly\nevaluate the condition until it returns a truthy value. If any errors occur\nwhile evaluating the condition, they will be allowed to propagate. In the\nevent a condition returns a <a href=\"lib/promise_exports_Promise.html\"><code>promise</code></a>, the polling\nloop will wait for it to be resolved and use the resolved value for whether\nthe condition has been satisified. Note the resolution time for a promise\nis factored into whether a wait has timed out.</p>\n<p>Note, if the provided condition is a <a href=\"lib/webdriver_exports_WebElementCondition.html\"><code>WebElementCondition</code></a>, then\nthe wait will return a <a href=\"lib/webdriver_exports_WebElementPromise.html\"><code>WebElementPromise</code></a> that will resolve to the\nelement that satisified the condition.</p>\n<p><em>Example:</em> waiting up to 10 seconds for an element to be present on the\npage.</p>\n<pre><code> var button &#61; driver.wait(until.elementLocated(By.id(&#39;foo&#39;)), 10000);\n button.click();\n</code></pre>\n<p>This function may also be used to block the command flow on the resolution\nof any thenable promise object. When given a promise, the command will\nsimply wait for its resolution before completing. A timeout may be provided\nto fail the command if the promise does not resolve before the timeout\nexpires.</p>\n<p><em>Example:</em> Suppose you have a function, <code>startTestServer</code>, that returns a\npromise for when a server is ready for requests. You can block a WebDriver\nclient on this promise with:</p>\n<pre><code> var started &#61; startTestServer();\n driver.wait(started, 5 * 1000, &#39;Server should start within 5 seconds&#39;);\n driver.get(getServerUrl());\n</code></pre>\n"}]}},"2":["T"],"4":[{"1":"condition","2":{"6":{"1":[{"4":{"1":"IThenable","4":true,"5":[{"6":{"1":[{"4":{"1":"T"}},{"10":true}]}}]}},{"4":{"1":"Condition","2":"selenium-webdriver/lib/webdriver.Condition","3":{"1":"lib/webdriver_exports_Condition.html"},"5":[{"6":{"1":[{"4":{"1":"T"}},{"10":true}]}}]}},{"3":{"3":[{"4":{"1":"WebDriver","2":"selenium-webdriver/lib/webdriver.WebDriver","3":{"1":"lib/webdriver_exports_WebDriver.html"}}}],"4":{"6":{"1":[{"4":{"1":"T"}},{"10":true}]}}}}]}},"3":{"1":[{"2":"<p>The condition to\nwait on, defined as a promise, condition object, or  a function to\nevaluate as a condition.</p>\n"}]}},{"1":"opt_timeout","2":{"1":true,"6":{"1":[{"4":{"1":"number","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>How long to wait for the condition to be true.</p>\n"}]}},{"1":"opt_message","2":{"1":true,"6":{"1":[{"4":{"1":"string","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>An optional message to use if the wait times\nout.</p>\n"}]}}],"5":{"2":{"4":{"1":"Thenable","2":"selenium-webdriver/lib/promise.Thenable","3":{"1":"lib/promise_exports_Thenable.html"}}},"3":{"1":[{"2":"<p>A promise that will be\nresolved with the first truthy value returned by the condition\nfunction, or rejected if the condition times out. If the input\ninput condition is an instance of a <a href=\"lib/webdriver_exports_WebElementCondition.html\"><code>WebElementCondition</code></a>,\nthe returned value will be a <a href=\"lib/webdriver_exports_WebElementPromise.html\"><code>WebElementPromise</code></a>.</p>\n"}]}}}],"19":[{"1":"IThenable","4":true,"5":[{"4":{"1":"T"}}]},{"1":"CancellableThenable","2":"selenium-webdriver/lib/promise.CancellableThenable","3":{"1":"lib/promise_exports_CancellableThenable.html"}},{"1":"Thenable","2":"selenium-webdriver/lib/promise.Thenable","3":{"1":"lib/promise_exports_Thenable.html"},"5":[{"4":{"1":"T"}}]},{"1":"IWebDriver","2":"selenium-webdriver/lib/webdriver.IWebDriver","3":{"1":"lib/webdriver_exports_IWebDriver.html"}}],"21":{"1":{"1":"selenium-webdriver","3":{"1":"index.html"}},"2":1},"23":"index_exports_ThenableWebDriver.html","24":"selenium-webdriver.ThenableWebDriver"}]}}