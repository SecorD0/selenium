language: java
sudo: required
jdk: oraclejdk8
notifications:
  email: false
  irc:
    channels:
      - secure: K+Wuro8Y/66zt9truTZuZzFmPqiGrFsH/sPzOBDK3+57mL6/vg2NoQCXOTq3U5RLdVKavlvZcm6+9nsNncVPRgzL7ORuW3BgLaBJis3lTA13AqlOnAbXcYytQEulVeWmvPipHFFFqaHs/z77lxm4fKwAAuBnK1f+mXKZDZR2hLo=
    on_success: never
    on_failure: always
    use_notice: true
    skip_join: true
env:
  global:
    - DISPLAY=:99.0
  matrix:
    - TASK=build
    - TASK=java TARGET=chrome
    - TASK=rb TARGET=unit-test
    - TASK=rb TARGET=chrome-test
    - TASK=rb TARGET=firefox-test
    - TASK=rb TARGET=ff-legacy-test
    - TASK=rb TARGET=phantomjs-test
    - TASK=rb TARGET=remote-chrome-test
    - TASK=rb TARGET=remote-firefox-test
    - TASK=rb TARGET=remote-ff-legacy-test
    - TASK=rb TARGET=remote-phantomjs-test
    - TASK=py TOXENV=py27-chrome
    - TASK=py TOXENV=py27-firefox
    - TASK=py TOXENV=py27-marionette
    - TASK=py TOXENV=py27-phantomjs
matrix:
  fast_finish: true
  allow_failures:
    - env: TASK=py TOXENV=py27-chrome
    - env: TASK=py TOXENV=py27-firefox
    - env: TASK=py TOXENV=py27-marionette
    - env: TASK=rb TARGET=remote-firefox-test
before_script:
  - sh -e /etc/init.d/xvfb start
script:
  - |
      if [[ $TARGET+$TOXENV == *"chrome"* ]]; then
        sudo apt-get -y purge chromium-browser
        export CHROME_REVISION=`curl -s http://commondatastorage.googleapis.com/chromium-browser-snapshots/Linux_x64/LAST_CHANGE`
        curl -L -O "http://commondatastorage.googleapis.com/chromium-browser-snapshots/Linux_x64/${CHROME_REVISION}/chrome-linux.zip"
        unzip chrome-linux.zip
        sudo ln -sf $PWD/chrome-linux/chrome-wrapper /usr/local/bin/chrome
        export CHROMEDRIVER_VERSION=`curl -s http://chromedriver.storage.googleapis.com/LATEST_RELEASE`
        curl -L -O "http://chromedriver.storage.googleapis.com/${CHROMEDRIVER_VERSION}/chromedriver_linux64.zip"
        unzip chromedriver_linux64.zip && chmod +x chromedriver && sudo mv chromedriver /usr/local/bin
      fi
  - |
      if [[ $TARGET == *"ff-legacy"* ]] || [ $TOXENV == *"firefox"* ]]; then
        pip install --user mozdownload mozinstall
        mozdownload --version 47.0.1 --destination firefox.tar.bz2
        mozinstall firefox.tar.bz2
        sudo ln -sf $PWD/firefox/firefox /usr/local/bin/firefox
        firefox --version
        export FF_LEGACY_BINARY=$PWD/firefox/firefox
      fi
  - |
      if [[ $TARGET == *"firefox"* ]] || [[ $TOXENV == *"marionette"* ]]; then
        export GECKODRIVER_VERSION=v0.10.0
        curl -L -o geckodriver.tar.gz https://github.com/mozilla/geckodriver/releases/download/${GECKODRIVER_VERSION}/geckodriver-${GECKODRIVER_VERSION}-linux64.tar.gz
        gunzip -c geckodriver.tar.gz | tar xopf -
        chmod +x geckodriver && sudo mv geckodriver /usr/local/bin
        pip install --user mozdownload mozinstall
        mozdownload --version latest --destination firefox.tar.bz2
        mozinstall firefox.tar.bz2
        sudo ln -sf $PWD/firefox/firefox /usr/local/bin/firefox
        firefox --version
      fi
  - |
      if [[ $TARGET+$TOXENV == *"phantomjs"* ]]; then
        export PHANTOMJS_NAME=phantomjs-2.1.1-linux-x86_64
        curl -L -O "https://cnpmjs.org/mirrors/phantomjs/${PHANTOMJS_NAME}.tar.bz2"
        tar -xvjf $PHANTOMJS_NAME.tar.bz2
        chmod +x $PHANTOMJS_NAME/bin/phantomjs
      fi
  - |
      if [[ $TASK == "build" ]]; then
        ./go build
      fi
  - |
      if [[ $TASK == "java" ]]; then
        ./go test_$TARGET
      fi
  - |
      if [[ $TASK == "py" ]]; then
        ./go py_prep_for_install_release
        pip install --user tox-travis
        tox -- --verbose --instafail
      fi
  - |
      if [[ $TASK == "rb" ]]; then
        rvm install 2.2.3
        rvm use 2.2.3
        ./go //rb:$TARGET
      fi
