name: Java workflow
on:
  workflow_dispatch:
  schedule:
    - cron: '15 9,21 * * *'

env:
  NODE_VERSION: '13.x'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source tree
        uses: actions/checkout@v2
      - name: Cache Bazel artifacts
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/bazel-disk
            ~/.cache/bazel-repo
          key: ${{ runner.os }}-bazel-build-${{ hashFiles('**/BUILD.bazel') }}
          restore-keys: |
            ${{ runner.os }}-bazel-build-
      - name: Setup bazelisk
        uses: ./.github/actions/setup-bazelisk
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      - name: Build grid
        uses: ./.github/actions/bazel
        with:
          command: build grid

  small_tests:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source tree
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache Bazel artifacts
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/bazel-disk
            ~/.cache/bazel-repo
          key: ${{ runner.os }}-bazel-small-tests-${{ hashFiles('**/BUILD.bazel') }}
          restore-keys: |
            ${{ runner.os }}-bazel-small-tests-
            ${{ runner.os }}-bazel-build-
      - name: Setup bazelisk
        uses: ./.github/actions/setup-bazelisk
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      - name: Run small tests
        uses: ./.github/actions/bazel-test
        with:
          query: attr(size, small, tests(//java/...)) except attr(tags, lint, tests(//java/...))
      - name: Sonar Scanner
        uses: ./.github/actions/sonar-cloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  lint:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source tree
        uses: actions/checkout@v2
      - name: Cache Bazel artifacts
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/bazel-disk
            ~/.cache/bazel-repo
          key: ${{ runner.os }}-bazel-lint-${{ hashFiles('**/BUILD.bazel') }}
          restore-keys: |
            ${{ runner.os }}-bazel-lint-
            ${{ runner.os }}-bazel-build-
      - name: Setup bazelisk
        uses: ./.github/actions/setup-bazelisk
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      - name: Run linter
        uses: ./.github/actions/bazel-test
        with:
          query: attr(tags, lint, tests(//java/...))

  browser_tests:
    needs: small_tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        browser: [ chrome, firefox ]
        version: [ latest ]
        include:
          - browser: 'firefox'
            version: 'latest-devedition'
          - browser: 'firefox'
            version: 'latest-beta'
    steps:
      - name: Checkout source tree
        uses: actions/checkout@v2
      - name: Cache Bazel artifacts
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/bazel-disk
            ~/.cache/bazel-repo
          key: ${{ runner.os }}-bazel-${{ matrix.browser }}-tests-${{ hashFiles('**/BUILD.bazel') }}
          restore-keys: |
            ${{ runner.os }}-bazel-${{ matrix.browser }}-tests-
            ${{ runner.os }}-bazel-build-
      - name: Setup bazelisk
        uses: ./.github/actions/setup-bazelisk
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      - name: Setup Firefox
        uses: browser-actions/setup-firefox@latest
        if: |
          matrix.browser == 'firefox'
        with:
          firefox-version: ${{ matrix.version }}
      - name: Setup GeckoDriver
        uses: browser-actions/setup-geckodriver@latest
        if: |
          matrix.browser == 'firefox'
      - name: Setup Chrome and ChromeDriver
        uses: ./.github/actions/setup-chrome
        if: |
          matrix.browser == 'chrome'
      - name: Start XVFB
        run: Xvfb :99 &
      - name: Run browser tests in ${{ matrix.browser }}
        uses: ./.github/actions/bazel-test
        with:
          query: attr(tags, ${{ matrix.browser }}, tests(//java/...)) except attr(tags, 'lint|rc|remote', tests(//java/...))
          attempts: 3
        env:
          DISPLAY: :99

  server_tests:
    needs: small_tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        browser: [ chrome, firefox ]
        version: [ latest ]
        include:
          - browser: 'firefox'
            version: 'latest-devedition'
          - browser: 'firefox'
            version: 'latest-beta'
    steps:
      - name: Checkout source tree
        uses: actions/checkout@v2
      - name: Cache Bazel artifacts
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/bazel-disk
            ~/.cache/bazel-repo
          key: ${{ runner.os }}-bazel-${{ matrix.browser }}-server-tests-${{ hashFiles('**/BUILD.bazel') }}
          restore-keys: |
            ${{ runner.os }}-bazel-${{ matrix.browser }}-server-tests-
            ${{ runner.os }}-bazel-${{ matrix.browser }}-tests-
            ${{ runner.os }}-bazel-build-
      - name: Setup bazelisk
        uses: ./.github/actions/setup-bazelisk
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      - name: Setup Firefox
        uses: browser-actions/setup-firefox@latest
        if: |
          matrix.browser == 'firefox'
        with:
          firefox-version: ${{ matrix.version }}
      - name: Setup GeckoDriver
        uses: browser-actions/setup-geckodriver@latest
        if: |
          matrix.browser == 'firefox'
      - name: Setup Chrome and ChromeDriver
        uses: ./.github/actions/setup-chrome
        if: |
          matrix.browser == 'chrome'
      - name: Start XVFB
        run: Xvfb :99 &
      - name: Run server tests
        uses: ./.github/actions/bazel-test
        with:
          query: attr(tags, ${{ matrix.browser }}, tests(//java/...)) intersect attr(tags, 'remote', tests(//java/...))
          attempts: 3
        env:
          DISPLAY: :99

  rc_tests:
    needs: small_tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source tree
        uses: actions/checkout@v2
      - name: Cache Bazel artifacts
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/bazel-disk
            ~/.cache/bazel-repo
          key: ${{ runner.os }}-bazel-firefox-tests-${{ hashFiles('**/BUILD.bazel') }}
          restore-keys: |
            ${{ runner.os }}-bazel-firefox-tests-
            ${{ runner.os }}-bazel-build-
      - name: Setup bazelisk
        uses: ./.github/actions/setup-bazelisk
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      - name: Setup Firefox
        uses: browser-actions/setup-firefox@latest
      - name: Setup GeckoDriver
        uses: browser-actions/setup-geckodriver@latest
      - name: Start XVFB
        run: Xvfb :99 &
      - name: Run browser tests in Firefox
        uses: ./.github/actions/bazel-test
        with:
          query: attr(tags, rc, tests(//java/...))
          attempts: 3
        env:
          DISPLAY: :99

  javadoc:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source tree
        uses: actions/checkout@v2
      - name: Cache Bazel artifacts
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/bazel-disk
            ~/.cache/bazel-repo
          key: ${{ runner.os }}-bazel-firefox-tests-${{ hashFiles('**/BUILD.bazel') }}
          restore-keys: |
            ${{ runner.os }}-bazel-firefox-tests-
            ${{ runner.os }}-bazel-build-
      - name: Setup bazelisk
        uses: ./.github/actions/setup-bazelisk
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      - name: Generate javadoc
        run: |
          ./go --verbose javadocs
